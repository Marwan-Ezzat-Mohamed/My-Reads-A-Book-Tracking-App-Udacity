{"version":3,"sources":["BooksAPI.js","components/Book.js","components/SearchPage.js","components/BookShelf.js","components/BookShelfs.js","components/homePage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","state","_this$props","this","props","onShelfUpdate","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChange","e","target","disabled","title","authors","length","map","author","index","key","Component","SearchPage","booksToDislplay","isBooksReady","setBooksShelfs","_callee","allBooks","searchedBooks","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","searchedBook","found","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","regenerator_default","wrap","_context","prev","next","BooksAPI","sent","toConsumableArray","_this","undefined","Symbol","iterator","done","push","t0","return","finish","t1","setState","stop","handleSearch","_callee2","_context2","error","handleAddBook","_callee3","oldBooks","bookToBeUpdated","_context3","indexOf","_this2","_this$state","react_router_dom","to","type","placeholder","event","components_Book","from","BookShelf","_ref","name","BookShelfs","handleShelfUpdate","bookShelfs","shelfBooks","filter","components_BookShelf","HomePage","components_BookShelfs","BooksApp","showSearchPage","handleShowingSearchPage","react_router","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.305e4fa4.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token)\r\n  token = localStorage.token = Math.random()\r\n    .toString(36)\r\n    .substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token,\r\n};\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ shelf }),\r\n  }).then((res) => res.json());\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({ query }),\r\n  })\r\n    .then((res) => res.json())\r\n    .then((data) => data.books);\r\n","import React, { Component } from \"react\";\r\nclass Book extends Component {\r\n  state = {};\r\n  render() {\r\n    const { data: book, onShelfUpdate } = this.props;\r\n    const noThumbnail =\r\n      \"https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg\";\r\n\r\n    return (\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className=\"book-cover\"\r\n            style={{\r\n              width: 128,\r\n              height: 193,\r\n              backgroundImage: `url(${\r\n                book.imageLinks ? book.imageLinks.thumbnail : noThumbnail\r\n              })`,\r\n            }}\r\n          />\r\n          <div className=\"book-shelf-changer\">\r\n            <select\r\n              value={book.shelf}\r\n              onChange={(e) => onShelfUpdate(book, e.target.value)}\r\n            >\r\n              <option value=\"move\" disabled>\r\n                Move to...\r\n              </option>\r\n              <option value=\"currentlyReading\">Currently Reading</option>\r\n              <option value=\"wantToRead\">Want to Read</option>\r\n              <option value=\"read\">Read</option>\r\n              <option value=\"none\">None</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"book-title\">{book.title}</div>\r\n        {book.authors && book.authors.length > 0 ? (\r\n          book.authors.map((author, index) => (\r\n            <div key={index} className=\"book-authors\">\r\n              {author}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"book-authors\">no authors</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Book;\r\n","import React, { Component } from \"react\";\r\nimport * as BooksAPI from \"../BooksAPI\";\r\nimport Book from \"./Book.js\";\r\nimport { Link } from \"react-router-dom\";\r\nclass SearchPage extends Component {\r\n  state = { booksToDislplay: [], query: \"\", isBooksReady: false };\r\n\r\n  setBooksShelfs = async () => {\r\n    const allBooks = await BooksAPI.getAll();\r\n    let searchedBooks = [...this.state.booksToDislplay];\r\n    let result = [];\r\n    for (const searchedBook of searchedBooks) {\r\n      let found = false;\r\n      for (const book of allBooks) {\r\n        if (book.id === searchedBook.id) {\r\n          result.push({ ...searchedBook, shelf: book.shelf });\r\n          found = 1;\r\n        }\r\n      }\r\n      if (!found) {\r\n        result.push({ ...searchedBook, shelf: \"none\" });\r\n      }\r\n    }\r\n    //console.log(result);\r\n    this.setState({ booksToDislplay: result, isBooksReady: true });\r\n  };\r\n\r\n  handleSearch = async (query) => {\r\n    this.setState({ query });\r\n    let books = await BooksAPI.search(query);\r\n    if (!books || books.error) books = [];\r\n    this.setState({ booksToDislplay: books, isBooksReady: false });\r\n  };\r\n\r\n  handleAddBook = async (book, shelf) => {\r\n    const oldBooks = [...this.state.booksToDislplay];\r\n    const booksToDislplay = [...this.state.booksToDislplay];\r\n    const index = booksToDislplay.indexOf(book);\r\n    const bookToBeUpdated = booksToDislplay[index];\r\n    bookToBeUpdated.shelf = shelf;\r\n    booksToDislplay[index] = bookToBeUpdated;\r\n    this.setState({ booksToDislplay });\r\n    try {\r\n      await BooksAPI.update(book, shelf);\r\n    } catch (error) {\r\n      //if any error occured we reverse the state back\r\n      this.setState({ booksToDislplay: oldBooks });\r\n    }\r\n  };\r\n  componentDidUpdate() {\r\n    if (!this.state.isBooksReady) {\r\n      this.setBooksShelfs();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { booksToDislplay: books, query } = this.state;\r\n    if (!query) books = [];\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\">\r\n            <button className=\"close-search\" />\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              onChange={(event) => this.handleSearch(event.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\">\r\n            {books.length >= 1 ? (\r\n              books.map((book) => (\r\n                <li key={book.id}>\r\n                  <Book\r\n                    data={book}\r\n                    from={\"searchPage\"}\r\n                    onShelfUpdate={this.handleAddBook}\r\n                  />\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p>NO BOOKS FOUND</p>\r\n            )}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport Book from \"./Book\";\r\n\r\nconst BookShelf = ({ name, data: books, onShelfUpdate }) => {\r\n  return (\r\n    <div className=\"bookshelf\">\r\n      <h2 className=\"bookshelf-title\">{name}</h2>\r\n      <div className=\"bookshelf-books\">\r\n        <ol className=\"books-grid\">\r\n          {books.map((book) => (\r\n            <li key={book.id}>\r\n              <Book data={book} onShelfUpdate={onShelfUpdate} />\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookShelf;\r\n","import React, { Component } from \"react\";\r\nimport BookShelf from \"./BookShelf.js\";\r\nimport * as BooksAPI from \"../BooksAPI\";\r\n\r\nclass BookShelfs extends Component {\r\n  state = {\r\n    allBooks: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const allBooks = await BooksAPI.getAll();\r\n      this.setState({ allBooks });\r\n    } catch (error) {\r\n      //if any error occured we reverse the state back\r\n      this.setState({ allBooks: [] });\r\n    }\r\n  }\r\n\r\n  handleShelfUpdate = async (book, shelf) => {\r\n    const oldBooks = [...this.state.allBooks];\r\n    \r\n    const allBooks = [...this.state.allBooks];\r\n    const index = allBooks.indexOf(book);\r\n    const bookToBeUpdated = allBooks[index];\r\n    bookToBeUpdated.shelf = shelf;\r\n    allBooks[index] = bookToBeUpdated;\r\n    this.setState({ allBooks });\r\n    try {\r\n      await BooksAPI.update(book, shelf);\r\n    } catch (error) {\r\n      //if any error occured we reverse the state back\r\n      this.setState({ allBooks: oldBooks });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { allBooks } = this.state;\r\n    const bookShelfs = [\r\n      {\r\n        name: \"Read\",\r\n        shelfBooks: allBooks.filter((book) => book.shelf === \"read\"),\r\n      },\r\n      {\r\n        name: \"Current Reading\",\r\n        shelfBooks: allBooks.filter(\r\n          (book) => book.shelf === \"currentlyReading\"\r\n        ),\r\n      },\r\n      {\r\n        name: \"Want To Read\",\r\n        shelfBooks: allBooks.filter((book) => book.shelf === \"wantToRead\"),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            {bookShelfs.map((shelf,index) => (\r\n              <BookShelf\r\n              key={index}\r\n                name={shelf.name}\r\n                data={shelf.shelfBooks}\r\n                onShelfUpdate={this.handleShelfUpdate}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookShelfs;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookShelfs from \"./BookShelfs\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div>\r\n      <BookShelfs />\r\n      <div className=\"open-search\">\r\n        <Link to=\"/search\">\r\n          <button>Add a book</button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport SearchPage from \"./components/SearchPage\";\r\nimport HomePage from \"./components/homePage\";\r\nimport \"./App.css\";\r\n\r\nclass BooksApp extends Component {\r\n  state = {\r\n    showSearchPage: false,\r\n  };\r\n\r\n  handleShowingSearchPage = () => {\r\n    this.setState({ showSearchPage: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/search\" component={SearchPage} />\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          {/* if any other router is written we redirect to the home page */}\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}